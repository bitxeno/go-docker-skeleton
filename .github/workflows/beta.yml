name: "ðŸš€ Beta"

# on events
on:
  workflow_dispatch:

# jobs
jobs:
  beta:
    name: Generate cross-platform builds
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        go_version: [1.18.x]
    runs-on: ubuntu-latest
    steps:
      # step 1: checkout repository code
      - name: Checkout the repository
        uses: actions/checkout@v3

      # step 2: setup build envirement
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go_version }}
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # step 3: set workflow variables
      - id: metadata
        uses: ahmadnassri/action-metadata@v2
      - name: Initialize workflow environments variables
        run: |
          echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "BUILDDATE=$(date '+%F-%T')" >> $GITHUB_ENV
          echo "COMMIT=$(git rev-parse --verify HEAD)" >> $GITHUB_ENV
          echo "APP_NAME=${{ steps.metadata.outputs.repository_name }}" >> $GITHUB_ENV
          echo "REPO=$(echo 'github.com/${{ github.repository }}')" >> $GITHUB_ENV
          echo "BRANCH=${{ steps.metadata.outputs.repository_default_branch }}" >> $GITHUB_ENV

          if [ ! -z $DOCKER_TOKEN ]; then echo "HAS_DOCKER_TOKEN=1" >> $GITHUB_ENV; fi
        env:
          DOCKER_TOKEN: "${{ secrets.DOCKER_TOKEN }}"

      # step 4: generate build files
      - name: build frontend
        run: cd ./view && npm install && npm run build
      - name: Generate build files
        uses: crazy-max/ghaction-xgo@v2
        with:
          xgo_version: latest
          go_version: ${{ matrix.go_version }}
          dest: build
          prefix: ${{env.APP_NAME}}
          targets: windows/amd64,linux/amd64,darwin/amd64,linux/arm64
          v: true
          x: false
          ldflags: -w -s -X ${{env.REPO}}/internal/version.Version=${{env.VERSION}} -X ${{env.REPO}}/internal/version.BuildDate=${{env.BUILDDATE}} -X ${{env.REPO}}/internal/version.Commit=${{env.COMMIT}} -X ${{env.REPO}}/internal/mode.Mode=production

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.APP_NAME}}
          path: build
          retention-days: 7

      # step 7.2: push to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
      - name: Build and push Docker images to ghci
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ghcr.io/${{ github.repository }}:beta
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            APP_NAME=${{env.APP_NAME}}
            VERSION=${{env.VERSION}}
            BUILDDATE=${{env.BUILDDATE}}
            COMMIT=${{env.COMMIT}}
